// import { PrismaClient, Prisma } from '@prisma/client'
// import { PrismaClient } from '../../generated/prisma'
const { PrismaClient } = require('../../generated/prisma')
const prisma = new PrismaClient()

const createMovie = async(req, res) => {
    let {title, year} = req.body
    try {
        const movies = await prisma.movies.create({
            data: {
                title, year
            },
        })  
        res.json({
            data: movies, 
            message: 'Movie was successfully created', 
            status: 'Success'
        })
        return

    } catch(err) {
        res.json({
            data: 'null',
            message: 'Movie was unsuccessfully created',
            status: 'Unsuccess'
        })
    }
}


const readMovie = async(req, res) => {
    try {
        const movies = await prisma.movies.findMany()
        res.json({
            data : movies, 
            message: 'Movie was successfully fetch',
            status: 'Success'
        })
        return
    } catch(err) {
        res.json({
            data: 'null',
            message: 'Movie was unsuccessfully fetch',
            status: 'Unsuccess'
        })
    }
}


const readMovieById = async(req, res) => {
    let { id } = req.params
    try {
        const movies = await prisma.movies.findUnique({
            where: {
                id: Number(id) 
            }
        })

        if(movies){
            message= 'Movie was successfully fetch'
            stat='Success'
            status=200
        } else {
            message= 'Movie was not found'
            stat='Unsuccess'
            status=400
        }

        res.status(status).json({
            data: movies,
            message,
            status: stat
        })

        return
    } catch(err) {
        res.json({
            data: 'null',
            message: 'Movie was unsuccessfully created',
            status: 'Unsuccess'
        })
    }
}

const updateMovie = async(req, res) => {
    let {title, year} = req.body
    let {id} = req.params
    try {
        const movies = await prisma.movies.update({
            where: {
                id: Number(id) 
            },
            data: {
                title, year
            }
        })

        res.json({
            data: movies,
            message: 'Movie was successfully created',
            status: 'Success'
        })
        return

    } catch(err){
        res.json({
            data: 'null',
            message: 'Movie was not updated',
            status: 'Unsuccess'
        })
    }
}

const deleteMovie = async(req, res) => {
    let {id} = req.params
    try {
        const movies = await prisma.movies.delete({
            where: {
                id: Number(id) 
            },
        })
        res.json({
            data: movies,
            message: 'Movie was successfully created',
            status: 'Success'
        })
    } catch(err) {
        res.json({
            data: 'null',
            message: 'Movie was unsuccessfully created',
            status: 'Unsuccess'
        })
    }
}

module.exports = {createMovie, readMovie, readMovieById, updateMovie, deleteMovie}